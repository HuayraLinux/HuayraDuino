{
	"@metadata": {
		"author": "carlosperate",
		"lastupdated": "2023-07-18 10:24:53.731887",
		"locale": "en",
		"messagedocumentation" : "qqq_ardublockly"
	},
	"ARD_TYPE_CHAR": "Character",
	"ARD_TYPE_TEXT": "Text",
	"ARD_TYPE_BOOL": "Boolean",
	"ARD_TYPE_SHORT": "Short Number",
	"ARD_TYPE_NUMBER": "Number",
	"ARD_TYPE_LONG": "Large Number",
	"ARD_TYPE_DECIMAL": "Decimal",
	"ARD_TYPE_ARRAY": "Array",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Undefined",
	"ARD_TYPE_CHILDBLOCKMISSING": "ChildBlockMissing",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_ANALOGREAD": "read analog pin#",
	"ARD_ANALOGREAD_TIP": "Return value between 0 and 1024",
	"ARD_ANALOGWRITE": "set analog pin#",
	"ARD_ANALOGWRITE_TIP": "Write analog value between 0 and 255 to a specific PWM Port",
	"ARD_HIGHLOW_TIP": "Set a pin state logic High or Low.",
	"ARD_DIGITALREAD": "read digital pin#",
	"ARD_DIGITALREAD_TIP": "Read digital value on a pin: HIGH or LOW",
	"ARD_DIGITALWRITE": "set digital pin#",
	"ARD_WRITE_TO": "to",
	"ARD_DIGITALWRITE_TIP": "Write digital value HIGH or LOW to a specific Port",
	"ARD_BUILTIN_LED": "set built-in LED",
	"ARD_BUILTIN_LED_TIP": "Light on or off for the built-in LED of the Arduino",
	"ARD_DEFINE": "Define",
	"ARD_TONE_PIN": "Tone PIN#",
	"ARD_TONE_FREQ": "frequency",
	"ARD_TONE_PIN_TIP": "Generate audio tones on a pin",
	"ARD_NOTONE_PIN": "No tone PIN#",
	"ARD_NOTONE_PIN_TIP": "Stop generating a tone on a pin",
	"ARD_MAP": "Map",
	"ARD_MAP_VAL": "value to [0-",
	"ARD_MAP_TIP": "Re-maps a number from [0-1024] to another.",
	"ARD_FUN_RUN_SETUP": "Arduino run first:",
	"ARD_FUN_RUN_LOOP": "Arduino loop forever:",
	"ARD_FUN_RUN_TIP": "Defines the Arduino setup() and loop() functions.",
	"ARD_PIN_WARN1": "Pin %1 is needed for %2 as pin %3. Already used as %4.",
	"ARD_SERIAL_SETUP": "Setup",
	"ARD_SERIAL_SPEED": ":  speed to",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "Selects the speed for a specific Serial peripheral",
	"ARD_SERIAL_PRINT": "print",
	"ARD_SERIAL_PRINT_NEWLINE": "add new line",
	"ARD_SERIAL_PRINT_TIP": "Prints data to the console/serial port as human-readable ASCII text.",
	"ARD_SERIAL_AVAILABLE": "available to read",
	"ARD_SERIAL_AVAILABLE_TIP": "Returns true if the number of bytes available to read is great zero.",
	"ARD_SERIAL_PRINT_WARN": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SERIAL_READ": "Read",
	"ARD_SERIAL_READ_TIP": "Reads a char for a specific Serial peripheral",
	"ARD_SERVO_WRITE": "set SERVO from Pin",
	"ARD_SERVO_WRITE_TO": "to",
	"ARD_SERVO_WRITE_DEG_180": "Degrees (0~180)",
	"ARD_SERVO_WRITE_TIP": "Set a Servo to an specified angle",
	"ARD_SERVO_READ": "read SERVO from PIN#",
	"ARD_SERVO_READ_TIP": "Read a Servo angle",
	"ARD_SPI_SETUP": "Setup",
	"ARD_SPI_SETUP_CONF": "configuration:",
	"ARD_SPI_SETUP_SHIFT": "data shift",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "clock divide",
	"ARD_SPI_SETUP_MODE": "SPI mode (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - Falling)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - Rising)",
	"ARD_SPI_SETUP_MODE2": "2 (High - Falling)",
	"ARD_SPI_SETUP_MODE3": "3 (High - Rising)",
	"ARD_SPI_SETUP_TIP": "Configures the SPI peripheral.",
	"ARD_SPI_TRANS_NONE": "none",
	"ARD_SPI_TRANS_VAL": "transfer",
	"ARD_SPI_TRANS_SLAVE": "to slave pin",
	"ARD_SPI_TRANS_TIP": "Send a SPI message to an specified slave device.",
	"ARD_SPI_TRANS_WARN1": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SPI_TRANS_WARN2": "Old pin value %1 is no longer available.",
	"ARD_SPI_TRANSRETURN_TIP": "Send a SPI message to an specified slave device and get data back.",
	"ARD_STEPPER_SETUP": "Setup stepper motor",
	"ARD_STEPPER_MOTOR": "stepper motor:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_NUMBER_OF_PINS": "Number of pins",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "pin1#",
	"ARD_STEPPER_PIN2": "pin2#",
	"ARD_STEPPER_PIN3": "pin3#",
	"ARD_STEPPER_PIN4": "pin4#",
	"ARD_STEPPER_REVOLVS": "how many steps per revolution",
	"ARD_STEPPER_SPEED": "set speed (rpm) to",
	"ARD_STEPPER_SETUP_TIP": "Configures a stepper motor pinout and other settings.",
	"ARD_STEPPER_STEP": "move stepper",
	"ARD_STEPPER_STEPS": "steps",
	"ARD_STEPPER_STEP_TIP": "Turns the stepper motor a specific number of steps.",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_MEGAPI_STEPPER_SETUP": "Setup MegaPi stepper motor",
	"ARD_MEGAPI_STEPPER_MOTOR": "MegaPi stepper motor:",
	"ARD_MEGAPI_STEPPER_DEFAULT_NAME": "MyMegaPiStepper",
	"ARD_MEGAPI_STEPPER_SLOT": "slot#",
	"ARD_MEGAPI_STEPPER_REVOLVS": "how many steps per revolution",
	"ARD_MEGAPI_STEPPER_SPEED": "set speed (rpm) to",
	"ARD_MEGAPI_STEPPER_ACCELERATION": "set acceleration to",
	"ARD_MEGAPI_STEPPER_SETUP_TIP": "Configures a MegaPi stepper motor pinout and other settings.",
	"ARD_MEGAPI_STEPPER_STEP": "move MegaPi stepper",
	"ARD_MEGAPI_STEPPER_STEP_TO": "move to MegaPi stepper",
	"ARD_MEGAPI_STEPPER_STEPS_TO": "steps to",
	"ARD_MEGAPI_STEPPER_STEPS": "steps",
	"ARD_MEGAPI_STEPPER_RUN": "run MegaPi stepper",
	"ARD_MEGAPI_STEPPER_RUN_TIP": "Runs MegaPi stepper statements",
	"ARD_MEGAPI_STEPPER_STEP_TIP": "Turns the MegaPi stepper motor a specific number of steps.",
	"ARD_MEGAPI_STEPPER_COMPONENT": "MegaPi stepper",
	"ARD_MEGAPI_LINE_FOLLOWER_SETUP": "Setup MegaPi line follower:",
	"ARD_MEGAPI_LINE_FOLLOWER_DEFAULT_NAME": "MyMegaPiLineFollower",
	"ARD_MEGAPI_LINE_FOLLOWER_PORT": "port#",
	"ARD_MEGAPI_LINE_FOLLOWER_SETUP_TIP": "Configures a MegaPi line follower pinout and other settings.",
	"ARD_MEGAPI_LINE_FOLLOWER_READ_SENSOR": "Read MegaPi line follower sensors",
	"ARD_MEGAPI_LINE_FOLLOWER_READ_SENSOR_TIP": "Reads a number for a specific MegaPi line follower peripheral",
	"ARD_MEGAPI_LINE_FOLLOWER_READ_SENSOR_INFO_1": "S1_IN_S2_IN   = 0x00    sensor1 and sensor2 are both inside of black line",
	"ARD_MEGAPI_LINE_FOLLOWER_READ_SENSOR_INFO_2": "S1_IN_S2_OUT  = 0x01    sensor1 is inside of black line and sensor2 is outside of black line",
	"ARD_MEGAPI_LINE_FOLLOWER_READ_SENSOR_INFO_4": "S1_OUT_S2_OUT = 0x03    sensor1 and sensor2 are both outside of black line",
	"ARD_MEGAPI_ULTRASONIC_SETUP": "Setup MegaPi ultrasonic:",
	"ARD_MEGAPI_ULTRASONIC_DEFAULT_NAME": "MyMegaPiUltrasonic",
	"ARD_MEGAPI_ULTRASONIC_PORT": "port#",
	"ARD_MEGAPI_ULTRASONIC_SETUP_TIP": "Configures a MegaPi ultrasonic pinout and other settings.",
	"ARD_MEGAPI_ULTRASONIC_DISTANCE": "Distance in Cm MegaPi ultrasonic sensor",
	"ARD_MEGAPI_ULTRASONIC_DISTANCE_TIP": "Reads a distance to an obstacle in cm for a MegaPi ultrasonic sensor",
	"ARD_MEGAPI_DC_MOTOR_SETUP": "Setup MegaPi DC Motor",
	"ARD_MEGAPI_DC_MOTOR_DEFAULT_NAME": "MyMegaPiDCMotor",
	"ARD_MEGAPI_DC_MOTOR_PORT": "port#",
	"ARD_MEGAPI_DC_MOTOR_SPEED": "to speed",
	"ARD_MEGAPI_DC_MOTOR_SETUP_TIP": "Configures a MegaPi DC Motor pinout and other settings.",
	"ARD_MEGAPI_DC_MOTOR_RUN": "run MegaPi DC Motor",
	"ARD_MEGAPI_DC_MOTOR_RUN_TIP": "Runs MegaPi DC Motor at especific speed",
	"ARD_MEGAPI_DC_MOTOR_STOP": "stop MegaPi DC Motor",
	"ARD_MEGAPI_DC_MOTOR_STOP_TIP": "Stops the MegaPi DC Motor.",
	"ARD_MEGAPI_DC_MOTOR_COMPONENT": "MegaPi DC Motor",
	"ARD_MEGAPI_GYRO_SETUP": "Setup MegaPi Gyro:",
	"ARD_MEGAPI_GYRO_DEFAULT_NAME": "MyMegaPiGyro",
	"ARD_MEGAPI_GYRO_SETUP_TIP": "Configures a MegaPi Gyro.",
	"ARD_MEGAPI_GYRO_READ_ANGLEX": "Read MegaPi Gyro angle X",
	"ARD_MEGAPI_GYRO_READ_ANGLEY": "Read MegaPi Gyro angle Y",
	"ARD_MEGAPI_GYRO_READ_ANGLEZ": "Read MegaPi Gyro angle Z",
	"ARD_MEGAPI_GYRO_READ_ANGLE_AXIS_TIP": "Reads the angle value of the x/y/z axis for a specific MegaPi Gyro peripheral",
	"ARD_MEGAPI_ENCODER_INIT": "Init MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_INIT_TIP": "Initializes all configurations of MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_SETUP": "Setup MegaPi Encoder: ",
	"ARD_MEGAPI_ENCODER_DEFAULT_NAME": "MyMegaPiEncoder",
	"ARD_MEGAPI_ENCODER_MOTOR": "MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_SLOT": "Slot#",
	"ARD_MEGAPI_ENCODER_SETUP_TIP": "Configures a MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_SETTARPWM": "Set PWM Tar MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_SETTARPWM_TIP": "Sets a PWM Tar function of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_SETPULSE": "Set Pulse MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_SETPULSE_TIP": "Sets the pulse of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_COMPONENT": "MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_SETMOTORPWM": "Set PWM MegaPi Encoder ",
	"ARD_MEGAPI_ENCODER_SETMOTORPWM_TIP": "Sets the PWM of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_SETRATIO": "Set Ratio MegaPi Encoder ",
	"ARD_MEGAPI_ENCODER_SETRATIO_TIP": "Sets the Ratio of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_SETPOSPID": "Set Pos PID of MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_SETPOSPID_P": "PID P",
	"ARD_MEGAPI_ENCODER_SETPOSPID_I": "PID I",
	"ARD_MEGAPI_ENCODER_SETPOSPID_D": "PID D",
	"ARD_MEGAPI_ENCODER_SETPOSPID_TIP": "Sets the Position PID and parameters of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_SETSPEEDPID": "Set Speed PID of MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_SETSPEEDPID_P": "PID P",
	"ARD_MEGAPI_ENCODER_SETSPEEDPID_I": "PID I",
	"ARD_MEGAPI_ENCODER_SETSPEEDPID_D": "PID D",
	"ARD_MEGAPI_ENCODER_SETSPEEDPID_TIP": "Sets the Speed PID and parameters of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_RUNSPEED": "Run at Speed MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_RUNSPEED_TIP": "Runs at especific Speed",
	"ARD_MEGAPI_ENCODER_MOVETO": "Move To MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_MOVETO_POS": "Position",
	"ARD_MEGAPI_ENCODER_MOVETO_SPEED": "Speed",
	"ARD_MEGAPI_ENCODER_MOVETO_TIP": "Moves To a position and speed of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_GETCURPOS": "Get Position MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_GETCURPOS_TIP": "Gets the current position of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_GETCURRENTSPEED": "Get Speed MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_GETCURRENTSPEED_TIP": "Gets the current speed of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_UPDATESPEED": "Update Speed MegaPi Encoder",
	"ARD_MEGAPI_ENCODER_UPDATESPEED_TIP": "Updates the previous set speed of MegaPi Encoder Motor",
	"ARD_MEGAPI_ENCODER_GO_STRAIGHT": "Move MegaPi Encoder Motors",
	"ARD_MEGAPI_ENCODER_GO_STRAIGHT_SPEED": "Set Speed",
	"ARD_MEGAPI_ENCODER_FOR_BACK": "Set direction",
	"ARD_MEGAPI_ENCODER_GO_STRAIGHT_TIP": "Sets the Speed to go for MegaPi Encoder Motors",
	"ARD_MEGAPI_ENCODER_FORWARD": "Forward",
	"ARD_MEGAPI_ENCODER_BACKWARD": "Backward",
	"ARD_MEGAPI_ENCODER_LEFT": "Left",
	"ARD_MEGAPI_ENCODER_RIGHT": "Right",
	"ARD_MEGAPI_ENCODER_SPIN": "Set turn to MegaPi Encoder Motors",
	"ARD_MEGAPI_ENCODER_SPIN_TIME": "turn wait in milliseconds",
	"ARD_MEGAPI_ENCODER_SPIN_DIR": "direction",
	"ARD_MEGAPI_ENCODER_SPIN_TIP": "Sets turn direction to go for MegaPi Encoder Motors",
	"ARD_DS18B20_SETUP": "Config Sensor type DS18B20",
	"ARD_DS18B20_DEFAULT_NAME": "ds_1",
	"ARD_DS18B20_PIN": "Pin",
	"ARD_DS18B20_ADDRESS_1": "direccion_1#",
	"ARD_DS18B20_ADDRESS_2": "direccion_2#",
	"ARD_DS18B20_ADDRESS_3": "direccion_3#",
	"ARD_DS18B20_ADDRESS_4": "direccion_4#",
	"ARD_DS18B20_ADDRESS_5": "direccion_5#",
	"ARD_DS18B20_ADDRESS_6": "direccion_6#",
	"ARD_DS18B20_ADDRESS_7": "direccion_7#",
	"ARD_DS18B20_ADDRESS": "direccion de memoria",
	"ARD_DS18B20_TEMPERATURE_C": "Leer Temperatura en °C de DS18B20 ",
	"ARD_DS18B20_TEMPERATURE_F": "Leer Temperatura en °F de DS18B20 ",
	"ARD_DS18B20_COMPONENT": "DS18B20",
	"ARD_COMPONENT_WARN1": "A %1 configuration block with the same %2 name must be added to use this block!",
	"ARD_TIME_DELAY": "wait",
	"ARD_TIME_MS": "milliseconds",
	"ARD_TIME_DELAY_TIP": "Wait specific time in milliseconds",
	"ARD_TIME_DELAY_MICROS": "microseconds",
	"ARD_TIME_DELAY_MICRO_TIP": "Wait specific time in microseconds",
	"ARD_TIME_MILLIS": "current elapsed Time (milliseconds)",
	"ARD_TIME_MILLIS_TIP": "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_MICROS": "current elapsed Time (microseconds)",
	"ARD_TIME_MICROS_TIP": "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_INF": "wait forever (end program)",
	"ARD_TIME_INF_TIP": "Wait indefinitely, stopping the program.",
	"ARD_VAR_AS": "as",
	"ARD_VAR_AS_TIP": "Sets a value to a specific type",
	"ARD_PULSE_READ": "measure %1 pulse on pin #%2",
	"ARD_PULSE_READ_TIMEOUT": "measure %1 pulse on pin #%2 (timeout after %3 μs)",
	"ARD_PULSE_TIP": "Measures the duration of a pulse on the selected pin.",
	"ARD_PULSETIMEOUT_TIP": "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.",
	"ARD_SETTONE": "Set tone on pin #",
	"ARD_TONEFREQ": "at frequency",
	"ARD_TONE_TIP": "Sets tone on pin to specified frequency within range 31 - 65535",
	"ARD_TONE_WARNING": "Frequency must be in range 31 - 65535",
	"ARD_NOTONE": "Turn off tone on pin #",
	"ARD_NOTONE_TIP": "Turns the tone off on the selected pin",
	"NEW_INSTANCE": "New instance...",
	"RENAME_INSTANCE": "Rename instance...",
	"NEW_INSTANCE_TITLE": "New instance name:",
	"RENAME_INSTANCE_TITLE": "Rename all '%1' instances to:"
}
